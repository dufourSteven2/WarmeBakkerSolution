@model PaginatedList<WarmeBakkerLib.Product>
@{
    ViewData["Title"] = "TIndex";
}

<div>
    <nav class="navbar navbar-dark navbar-expand-md">
        <button id="nav.btn" class="navbar-toggler" data-toggle="collapse" data-target="#theMenu">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div id="theMenu" class="collapse navbar-collapse ">

            <ul class="navbar-nav">
                <li class="nav-item"><a class="nav-link" asp-area="" asp-controller="Producten" asp-action="Index">Producten</a></li>
                <li class="nav-item"><a class="nav-link" asp-area="" asp-controller="Producten" asp-action="About">Categorieën</a></li>
                <li class="nav-item"><a class="nav-link" asp-area="" asp-controller="Producten" asp-action="Contact">Nieuwsberichten</a></li>
                <li class="nav-item"><a class="nav-link" asp-area="" asp-controller="Productenr" asp-action="Index">gebruikersbeheer</a></li>

                <li class="nav-item"><a class="nav-link" asp-area="" asp-controller="Order" asp-action="Index">Orders</a></li>
                @*hierboven index views alle controllers*@
            </ul>
        </div>
    </nav>
</div>


<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<div>
    @foreach (var headcat in Model)
    {
        int? i = headcat.Category.HeadCategoryId;

        @if (i == headcat.Category.HeadCategoryId)
        {
            <h4>@headcat.Category.HeadCategory.Name</h4>



        }
    }
</div>
<table class="table">
    <thead class="thead-dark">
        <tr>
            <th scope="col">
                Naam Product

            </th>
            <th scope="col">
                Prijs product
            </th>
            <th scope="col">
                Afbeelding
            </th>
            <th scope="col">
                Omschrijving

            </th>
            <th scope="col">
                HightLight

            </th>
            <th scope="col">
                Category Name

            </th>
            <th scope="col">
                Head Category Name

            </th>
            <th scope="col">
                Acties
            </th>
        </tr>

    </thead>
    <tbody>
        @foreach (var item in Model)
        {


        <tr itemscope>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @*@Html.DisplayFor(modelItem => item.Picture)*@
                @{
                    string imageUrl = item.Picture != null ?
                        "products/" + item.Picture : "default-product.png";
                }
                <div style="height:100px;width:100px;
                                background-image:url('/images/@imageUrl');
                                background-size: cover;"></div>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Highlight)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.HeadCategory.Name)
            </td>
            <td class="btn-group-lg">
                <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                <a class="btn btn-info" asp-action="Details" asp-route-id="@item.Id">Details</a>
                <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
        }
    </tbody>
</table>

<p>
    <a class="btn btn-success" asp-action="Create">Create New</a>
</p>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
